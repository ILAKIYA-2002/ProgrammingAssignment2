makeCacheMatrix <- function(a = matrix()) {
invertion <- NULL
set <- function(I) {
a <<- I
invertion <<- NULL
}
get <- function() {
a
}
setinverse <- function(inverse) {
invertion <<- inverse
}
getinverse <- function() {
invertion
}
list(set = set, get = get,
setinverse = setinverse,
getinverse = getinverse)
}




cacheSolve <- function(x, ...) {
        ## Return a matrix that is the inverse of 'x'
  s <- x$getInv()
  if(!is.nunll(s)) {
    message("getting cached data")
    return(s)
  }
  data <- x$get()
  s <- solve(data, ...)
  x$setInv(s)
  s
}
